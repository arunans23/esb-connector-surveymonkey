<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="getRespondentList" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="surveyId"
               description="The survey id, which must be an id of a created survey from the website."/>
    <!-- Optional Parameters -->
    <parameter name="collectorId" description="Id of the collector gathering responses"/>
    <parameter name="pageNumber" description="Pagination page number"/>
    <parameter name="pageSize"
               description="Number of surveys to return per page. Defaults to 1000,
        but basic users can only ever retrieve the first 100 respondents"/>
    <parameter name="startDate"
               description="The startDate, Respondents must be created after this date"/>
    <parameter name="endDate"
               description="The endDate, Respondents must be created before this date"/>
    <parameter name="startModifiedDate"
               description="The startModifiedDate, Respondents must be modified after this date"/>
    <parameter name="endModifiedDate"
               description="The endModifiedDate, Respondents must be modified before this date"/>
    <parameter name="isOrderAscending"
               description="The isOrderAscending, if 'true' sorts ASC, if 'false' sorts DESC. Defaults to 'false' (DESC)"/>
    <parameter name="orderBy"
               description="The orderBy, Column to sort results by.
        One of the following: [respondent_id, date_modified, date_start]Defaults to respondent_id"/>
    <parameter name="fields"
               description="The fields, Additional fields to return.
        One or more of :[date_start, date_modified, collector_id, collection_mode, custom_id, email,
        first_name, last_name, ip_address, status, analysis_url]"/>
    <sequence>
        <property name="uri.var.surveyId" expression="$func:surveyId"/>
        <property name="uri.var.collectorId" expression="$func:collectorId"/>
        <property name="uri.var.pageNumber" expression="$func:pageNumber"/>
        <property name="uri.var.pageSize" expression="$func:pageSize"/>
        <property name="uri.var.startDate" expression="$func:startDate"/>
        <property name="uri.var.endDate" expression="$func:endDate"/>
        <property name="uri.var.startModifiedDate" expression="$func:startModifiedDate"/>
        <property name="uri.var.endModifiedDate" expression="$func:endModifiedDate"/>
        <property name="uri.var.isOrderAscending" expression="$func:isOrderAscending"/>
        <property name="uri.var.orderBy" expression="$func:orderBy"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <filter source="boolean($ctx:uri.var.isOrderAscending)" regex="false">
            <then>
                <property name="uri.var.isOrderAscending" value="false"/>
            </then>
        </filter>
        <filter source="boolean($ctx:uri.var.pageSize)" regex="false">
            <then>
                <property name="uri.var.pageSize" value="0"/>
            </then>
        </filter>
        <filter source="boolean($ctx:uri.var.pageNumber)" regex="false">
            <then>
                <property name="uri.var.pageNumber" value="0"/>
            </then>
        </filter>
        <filter source="boolean($ctx:uri.var.fields)" regex="false">
            <then>
                <property name="uri.var.fields" value="[]"/>
            </then>
        </filter>
        <payloadFactory media-type="json">
            <format>
                {
                    "survey_id": "$1",
                    "order_asc":$2,
                    "page": $3,
                    "page_size":$4,
                    "fields":$5
                }
            </format>
            <args>
                <arg expression="$ctx:uri.var.surveyId"/>
                <arg expression="$ctx:uri.var.isOrderAscending"/>
                <arg expression="$ctx:uri.var.pageNumber"/>
                <arg expression="$ctx:uri.var.pageSize"/>
                <arg expression="$ctx:uri.var.fields"/>
            </args>
        </payloadFactory>
        <!-- Check existance of optional parameters -->
        <script language="js">
            <![CDATA[

            var collectorId = mc.getProperty('uri.var.collectorId');
            var pageNumber = mc.getProperty('uri.var.pageNumber');
            var pageSize = mc.getProperty('uri.var.pageSize');
            var startDate = mc.getProperty('uri.var.startDate');
            var endDate = mc.getProperty('uri.var.endDate');
            var startModifiedDate = mc.getProperty('uri.var.startModifiedDate');
            var endModifiedDate = mc.getProperty('uri.var.endModifiedDate');
            var isOrderAscending = mc.getProperty('uri.var.isOrderAscending');
            var orderBy = mc.getProperty('uri.var.orderBy');
            var fields = mc.getProperty('uri.var.fields');
            var payload = mc.getPayloadJSON();

            if (pageNumber == "0" || pageNumber == "1") {
                delete payload['page'];
            }

            if (pageSize == "0") {
                delete payload['page_size'];
            }

            if (fields == "[]") {
                delete payload['fields'];
            }

            if (collectorId != null && collectorId != "") {
                payload.collector_id = collectorId;
            }

            if (startDate != null && startDate != "") {
                payload.start_date = startDate;
            }

            if (endDate != null && endDate != "") {
                payload.end_date = endDate;
            }

            if (startModifiedDate != null && startModifiedDate != "") {
                payload.start_modified_date = startModifiedDate;
            }

            if (endModifiedDate != null && endModifiedDate != "") {
                payload.end_modified_date = endModifiedDate;
            }

            if (orderBy != null && orderBy != "") {
                payload.order_by = orderBy;
            }

            mc.setPayloadJSON(payload);

            ]]>
        </script>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/v2/surveys/get_respondent_list?api_key={+uri.var.apiKey}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="Access-Control-Expose-Headers" scope="transport" action="remove"/>
        <header name="X-Mashery-Message-ID" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove"/>
        <header name="SM-Request-ID" scope="transport" action="remove"/>
        <header name="X-Mashery-Responder" scope="transport" action="remove"/>
    </sequence>
</template>