<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~  Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~  WSO2 Inc. licenses this file to you under the Apache License,
 ~  Version 2.0 (the "License"); you may not use this file except
 ~  in compliance with the License.
 ~  You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~  Unless required by applicable law or agreed to in writing,
 ~  software distributed under the License is distributed on an
 ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~  KIND, either express or implied.  See the License for the
 ~  specific language governing permissions and limitations
 ~  under the License.
-->
<template name="getCollectorList" xmlns="http://ws.apache.org/ns/synapse">
    <!-- Required Parameters -->
    <parameter name="surveyId"
               description="The survey id, which must be an id of a created survey from the website."/>
    <!-- Optional Parameters -->
    <parameter name="pageNumber" description="Pagination page number"/>
    <parameter name="pageSize" description="Number of surveys to return per page."/>
    <parameter name="startDate" description="Collectors must be created after this date"/>
    <parameter name="endDate" description="Collectors must be created before this date"/>
    <parameter name="name" description="Name of survey to search against"/>
    <parameter name="isOrderAscending"
               description="If true sorts by creation time ASC, if false sorts by creation time DESC. Defaults to false"/>
    <parameter name="fields" description="Additional fields to return.
    One or more of :[url, open, type, name, date_created, date_modified]"/>
    <sequence>
        <property name="uri.var.surveyId" expression="$func:surveyId"/>
        <property name="uri.var.pageNumber" expression="$func:pageNumber"/>
        <property name="uri.var.pageSize" expression="$func:pageSize"/>
        <property name="uri.var.startDate" expression="$func:startDate"/>
        <property name="uri.var.endDate" expression="$func:endDate"/>
        <property name="uri.var.name" expression="$func:name"/>
        <property name="uri.var.isOrderAscending" expression="$func:isOrderAscending"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <filter xpath="($ctx:uri.var.pageNumber = '' or (not(string($ctx:uri.var.pageNumber))))">
            <then>
                <property name="uri.var.pageNumber" value="1"/>
            </then>
        </filter>
        <filter xpath="($ctx:uri.var.pageSize = '' or (not(string($ctx:uri.var.pageSize))))">
            <then>
                <property name="uri.var.pageSize" value="1000"/>
            </then>
        </filter>
        <filter xpath="($ctx:uri.var.isOrderAscending = '' or (not(string($ctx:uri.var.isOrderAscending))))">
            <then>
                <property name="uri.var.isOrderAscending" value="false"/>
            </then>
        </filter>
        <filter xpath="($ctx:uri.var.fields = '' or (not(string($ctx:uri.var.fields))))">
            <then>
                <property name="uri.var.fields" value="[]"/>
            </then>
        </filter>
        <payloadFactory media-type="json">
            <format>
                {
                "survey_id":"$1",
                "page":$2,
                "page_size":$3,
                "start_date":"$4",
                "end_date":"$5",
                "order_asc":$6,
                "fields":$7,
                "name":"$8"
                }
            </format>
            <args>
                <arg expression="$ctx:uri.var.surveyId"/>
                <arg expression="$ctx:uri.var.pageNumber"/>
                <arg expression="$ctx:uri.var.pageSize"/>
                <arg expression="$ctx:uri.var.startDate"/>
                <arg expression="$ctx:uri.var.endDate"/>
                <arg expression="$ctx:uri.var.isOrderAscending"/>
                <arg expression="$ctx:uri.var.fields"/>
                <arg expression="$ctx:uri.var.name"/>
            </args>
        </payloadFactory>
        <script language="js"><![CDATA[
            var startDate = mc.getProperty("uri.var.startDate");
            var endDate = mc.getProperty("uri.var.endDate");
            var name = mc.getProperty("uri.var.name");
            var fields = mc.getProperty("uri.var.fields");
            var payload = mc.getPayloadJSON();
            var pNum = payload.page;
            var payloadFields = payload.fields;

            if (pNum == "1.0") {
                delete payload['page'];
            }

            if (payloadFields == "[]") {
                delete payload['fields'];
            }

            if (startDate == null || startDate == "") {
                delete payload['start_date'];
            }

            if (endDate == null || endDate == "") {
                delete payload['end_date'];
            }

            if (name == null || name == "") {
                delete payload['name'];
            }

            mc.setPayloadJSON(payload);
            ]]>
        </script>
        <call>
            <endpoint>
                <http method="post"
                      uri-template="{uri.var.apiUrl}/v2/surveys/get_collector_list?api_key={+uri.var.apiKey}"/>
            </endpoint>
        </call>
        <!-- Remove response custom header information -->
        <header name="Access-Control-Expose-Headers" scope="transport" action="remove"/>
        <header name="X-Mashery-Message-ID" scope="transport" action="remove"/>
        <header name="Access-Control-Allow-Origin" scope="transport" action="remove"/>
        <header name="SM-Request-ID" scope="transport" action="remove"/>
        <header name="X-Mashery-Responder" scope="transport" action="remove"/>
    </sequence>
</template>